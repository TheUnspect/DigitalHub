print "loaded"
if game.PlaceId==286090429 then
require(game:GetService("ReplicatedStorage").Game.Notification).new({
                    Text = "Game detected is JailBreak,", --the text
                    Duration = 4 --how long this will be on screen
                })
_G.ARt = true
        local Falling
       for i,v in pairs(getgc(true)) do
            if type(v) == "table" and rawget(v, 'Ragdoll') and rawget(v, 'Unragdoll') then
                Falling = v
            end
       end
        local oldRagdoll = Falling.Ragdoll
        Falling.Ragdoll = function(...)
            if _G.ARt then
                return wait(9e9)
            else
                return oldRagdoll(...)
            end
        end
        wait(0.1)
local mouse = game:GetService('Players').LocalPlayer:GetMouse()

local function hotkeyHandler(key)
  if (key == 'q') then
    for _, v in next, getgc(true) do
      if (type(v) == 'table' and rawget(v, 'Nitro')) then
        v.Nitro = 250
      end
    end
  end
end

mouse.KeyDown:connect(hotkeyHandler)
game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == "e" then
local Gun = game.ReplicatedStorage.Weapons:FindFirstChild(game.Players.LocalPlayer.NRPBS.EquippedTool.Value);
local Crit = math.random() > .6 and true or false;
for i,v in pairs(game.Players:GetPlayers()) do
if v and v.Character and v.Character:FindFirstChild("Head") then
local Distance = (game.Players.LocalPlayer.Character.Head.Position - v.Character.Head.Position).magnitude
for i  = 1,10 do
game.ReplicatedStorage.Events.HitPart:FireServer(v.Character.Head,
v.Character.Head.Position + Vector3.new(math.random(), math.random(), math.random()),
Gun.Name,
Crit and 2 or 1,
Distance,
Backstab,
Crit,
false,
1,
false,
Gun.FireRate.Value,
Gun.ReloadTime.Value,
Gun.Ammo.Value,
Gun.StoredAmmo.Value,
Gun.Bullets.Value,
Gun.EquipTime.Value,
Gun.RecoilControl.Value,
Gun.Auto.Value,
Gun['Speed%'].Value,
game.ReplicatedStorage.wkspc.DistributedTime.Value);
end
end
end
end
end) 
end
if game.PlaceId==606849621 then
local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
while wait() do
for i,v in pairs (UI.CircleAction.Specs) do
v.Duration = 0;
v.Timed = true;
end
end
end
